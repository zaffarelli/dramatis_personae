version: "3.9"

services:
  db:
    image: postgres:11-stretch
    container_name: dp_db
    environment:
      POSTGRES_NAME: dramatis_personae
      POSTGRES_USER: dramatis_personae
      POSTGRES_PASSWORD: dramatis_personae
    restart: always
    expose:
      - "5432"
    networks:
      - dp_db_net
    volumes:
      - db:/var/lib/postgresql/data
    secrets:
      - dramatis_personae_db_passwd

  dp_nginx:
    build:
      context: ../
      dockerfile: ./docker/nginx/Dockerfile
    container_name: dp_nginx
    restart: always
    ports:
      - "85:8080"
    networks:
      - dp_web_net
    volumes:
      - .:/vol/web/app
      - static_files:/vol/web/static/
      - media_files:/vol/web/media/

  dp_app:
    build:
      context: ../
      dockerfile: ./docker/dramatis_personae/Dockerfile
    container_name: dp_app
    restart: always
    expose:
      - "8000"
    networks:
      - dp_db_net
      - dp_web_net
    environment:
      DEBUG: 0
      WEB_PATH: /vol/web/app
      DB_NAME: dramatis_personae
      DB_USER: dramatis_personae
      DB_PASSWORD: dramatis_personae
      ALLOWED_HOSTS: "*"
    volumes:
      - static_files:/vol/web/static/
      - media_files:/vol/web/media/
    secrets:
      - dramatis_personae_db_passwd
    depends_on:
      - db


volumes:
  db:
    name: dramatis_personae_db
  static_files:
    name: dramatis_personae_static_files
    driver_opts:
      type: tmpfs
      device: tmpfs
  media_files:
    name: dramatis_personae_media_files
    driver_opts:
      type: tmpfs
      device: tmpfs

secrets:
  dramatis_personae_db_passwd:
    file: ./secrets/dp_db_pass.txt

networks:
  dp_db_net:
    name: dp_db_net
    ipam:
      driver: default
#    driver_opts:
#      com.docker.network.bridge.name: dbr-dp_db

  dp_web_net:
    name: dp_web_net
    ipam:
      driver: default
#    driver_opts:
#      com.docker.network.bridge.name: dbr-dp_app
